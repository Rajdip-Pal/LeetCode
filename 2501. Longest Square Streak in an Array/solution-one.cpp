#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <unordered_map>
#include <unordered_set>

class Solution
{
public:
    static int longestSquareStreak(const std::vector<int> &nums)
    {
        std::ios::sync_with_stdio(false);
        std::cin.tie(nullptr);
        std::cout.tie(nullptr);

        int maxStreak{-1};
        std::unordered_map<unsigned long, bool> squareCollections, givenSquaredElements;

        {
            unsigned long square{};
            for (unsigned long i = 2; (square = i * i) <= 100000; i++)
                squareCollections[square] = true;
        }

        {
            for (int i{}; i < nums.size(); i++)
                if (squareCollections[nums[i]])
                    givenSquaredElements[nums[i]] = true;
        }

        {
            int currentStreak{};
            unsigned long currentNum{};

            for (int i = 0; i < nums.size(); i++)
                if (givenSquaredElements[(currentNum = powl(nums[i], 2))])
                {
                    currentStreak += 2;
                    while (givenSquaredElements[(currentNum *= currentNum)])
                        currentStreak++;

                    maxStreak = std::max(currentStreak, maxStreak);
                    currentStreak = 0;
                    currentNum = 0;
                }
                else
                    currentNum = 0;
        }

        return maxStreak < 2 ? maxStreak = -1 : maxStreak;
    }
};

int main(int argc, char const *argv[])
{
    std::vector<int> nums = {};
    std::cout << Solution::longestSquareStreak(nums) << std::endl;

    return 0;
}
